version: '2.1'

services:

  plex:
    image: lscr.io/linuxserver/plex
    restart: unless-stopped 
    network_mode: host
    # runtime: nvidia
    environment:
      - VERSION=public
      - NVIDIA_VISIBLE_DEVICES=all
      - PGID=${GID}
      - PUID=${UID}
      - TZ=America/Chicago
    volumes:
      - ./plex/config:/config
      - ${MEDIA_PATH}/tv:/tv
      - ${MEDIA_PATH}/movies:/movies
      - ./plex/transcode:/transcode

  transmission:
    image: lscr.io/linuxserver/transmission
    restart: unless-stopped 
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=America/Chicago
    volumes:
      - ./transmission/config:/config
      - ${MEDIA_PATH}/downloads:/data/downloads
      - ./transmission/watch:/watch
    ports:
      - 51413:51413
      - 51413:51413/udp
      - 9091:9091

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    restart: unless-stopped
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=America/Chicago
    volumes:
      - ./prowlarr/config:/config
    ports:
      - 9696:9696

  sonarr:
    image: lscr.io/linuxserver/sonarr
    restart: unless-stopped 
    depends_on:
      - transmission
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=America/Chicago
    volumes:
      - ./sonarr/config:/config
      - ${MEDIA_PATH}:/data
    ports:
      - 8989:8989
    links:
      - "plex"

  radarr:
    image: lscr.io/linuxserver/radarr
    restart: unless-stopped 
    depends_on:
      - transmission
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=America/Chicago
    volumes:
      - ./radarr/config:/config
      - ${MEDIA_PATH}:/data
    ports:
      - 7878:7878
    links:
      - "plex"

  doplarr:
    image: lscr.io/linuxserver/doplarr
    restart: unless-stopped
    network_mode: host
    environment:
      - PGID=${GID}
      - PUID=${UID}
      - TZ=America/Chicago
      - DISCORD__TOKEN=${DISCORD_TOKEN}
      - RADARR__API=${RADARR_API}
      - RADARR__URL=http://10.0.0.3/movies
      - SONARR__API=${SONARR_API}
      - SONARR__URL=http://10.0.0.3/tv
    volumes:
      - ./doplarr/config:/config

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=America/Chicago
    ports:
      - 8191:8191
    restart:
      unless-stopped

      #  gui:
      #    image: node:10
      #    working_dir: /usr/src/app
      #    restart: unless-stopped 
      #    environment:
      #      NODE_ENV: development
      #    command: npm start
      #    volumes:
      #      - ./gui:/usr/src/app
      #    ports:
      #      - 8080:8080

  nginx:
    image: nginx
    restart: unless-stopped 
    environment:
      - NGINX_PORT=80
    # - NGINX_HOST=10.0.0.3
    depends_on:
      - radarr
      - sonarr
      - transmission
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d
      - ./nginx/config/:/config/nginx/
    command: /bin/bash -c "exec nginx -g 'daemon off;'"
    ports:
      - 80:80
